{"name":"Monkeycam","tagline":"CAD/CAM software for ski and snowboard design and G-code program generation","body":"# MonkeyCAM v4.0\r\n\r\nMonkeyCAM v4.0 is an open source CAD/CAM program for designing skis\r\nand snowboards, and generating\r\n[G-code](http://en.wikipedia.org/wiki/G-code) programs to cut board\r\nparts with a [CNC\r\nmachine](http://en.wikipedia.org/wiki/Numerical_control).\r\n\r\nThe [CAD](http://en.wikipedia.org/wiki/Computer-aided_design) portion\r\nof MonkeyCAM is quite limited, and is specifically designed to aid the\r\ndesign of skis and snowboards only. The\r\n[CAM](http://en.wikipedia.org/wiki/Computer-aided_manufacturing)\r\nportion is slightly more general, but again is specialized to ski and\r\nsnowboard manufacture.\r\n\r\nMonkeyCAM is published on Github at https://github.com/mikemag/MonkeyCAM\r\n\r\nMore information about ski and snowboard construction can be found at\r\n[Monkey Wiki](http://www.happymonkeysnowboards.com/MonkeyWiki) and\r\n[SkiBuilders.com](http://www.skibuilders.com/).\r\n\r\n## License\r\n\r\nMonkeyCAM is licensed under the Apache License, Version 2.0 except as\r\notherwise noted. See\r\n[LICENSE](https://github.com/mikemag/MonkeyCAM/blob/master/LICENSE)\r\nfor details.\r\n\r\nThe G-code programs **generated** by MonkeyCAM are license-free.\r\n\r\n### Disclaimer\r\n\r\nI am providing code in this repository to you under an open source\r\nlicense. Because this is my personal repository, the license you\r\nreceive to my code is from me and not from my employer (Facebook).\r\n\r\n## Current Release\r\n\r\nSee the [Releases page](https://github.com/mikemag/MonkeyCAM/releases) for the current release, which includes release notes and links to download binaries.\r\n\r\nAt this time there are only Mac OSX binaries, sorry! [That will change soon](https://github.com/mikemag/MonkeyCAM/issues/4). \r\n\r\n## Features and Current Status\r\n\r\nMonkeyCAM is currently a command-line program only. The program takes configuration files to\r\ndescribe the ski or snowboard shape via a small set of parameters and\r\ngenerates the following G-code programs:\r\n\r\n* Base cutout\r\n* Core:\r\n  * Guide holes to allow the core to be removed and flipped between programs\r\n  * Alignment marks to transfer key design points to the bottom of the core\r\n  * Edge relief to leave room for steel edges\r\n  * Insert holes for standard snowboard inserts (T-nuts) in a variety of patterns\r\n  * Top profile to impart the taper to the core\r\n  * Cutout, allowing for sidewall overhang and nose/tail spacers\r\n* Nose and tail spacers which match the core\r\n* Edge trenches to enable inlay of different edge wood and/or sidewall\r\nmaterial along the effective edge of the core\r\n\r\nThe G-code programs emitted at this time have been tested on my CNC\r\nmachine with a very old DeskCNC controller and work correctly. Each\r\nprogram also loads in Mach 3 and simulates correctly. The programs not\r\ninvolving holes load in ShopBot's controller and simulate correctly,\r\nbut the ones with holes do not work for ShopBot right now.\r\n\r\nThere is no UI, and all configuration and results are in files.\r\n\r\nYou can see a sample set of programs here: [MonkeyCAM Visualization\r\nExample](http://www.happymonkeysnowboards.com/MonkeyCAM/path-viewer.html)\r\n\r\n## Future Work\r\n\r\nMonkeyCAM v4.0 is a work in-progress. It is an incomplete (~50% so\r\nfar) port of MonkeyCAM, developed by [Mike\r\nMagruder](https://github.com/mikemag) for [Happy Monkey Snowboards,\r\nInc.](http://www.happymonkeysnowboards.com/) from 2003 to 2012. The\r\nvaluable parts of the MonkeyCAM v3 backend (shape and G-code\r\ngeneration) will be ported to this version over the next many\r\nmonths. The old UI will be discarded. The plan includes, roughly in\r\norder:\r\n\r\n* Target more G-code controllers with different formats and requirements.\r\n* Provide distribution of binaries for Mac OSX and Windows 8.\r\n* More options for effective edge, nose, and tail. (MonkeyCAM v3, for\r\n  instance, had 6 tail options.)\r\n* Port the code to soften the transition between edge and\r\n  nose/tail. (You can work around this with a sandblock and two min of\r\n  your time for now.)\r\n* Port the MonkeyCAM design UI to a web-based UI built on HTML 5, and\r\nenable local execution.\r\n  * The UI will include easy controls for inputting the shape\r\n    parameters, plus live visualization of the overall shape, profile,\r\n    insert placement, etc. It also includes specifying the machining\r\n    parameters. Right now I'm thinking about a combination of React and\r\n    three.js.\r\n* Port the MonkeyCAM G-code validation UI, built on the same framework\r\n  as the design UI.\r\n  * This includes import of the G-code programs output from MonkeyCAM,\r\n    as well as pretty much any G-code program, visualization of the\r\n    tool path, overlay of multiple programs together for validation,\r\n    and stepping through G-code programs to better understand how the\r\n    cutter will move.\r\n* Host MonkeyCAM on servers in something like AWS or Google Apps;\r\n  serve the UI while running the engine on the server, provide local\r\n  storage for board configurations.\r\n* Read the overall board shape from other CAD programs (DXF at least).\r\n* Output the overall shape, insert locations, etc. to PDF/DXF for\r\n  printing or use in other CAD programs.\r\n* Mold design and program to cut molds.\r\n* Rouging passes for the core profile.\r\n* Adapt for other kinds of 'boards': kite boards, skate boards, etc.\r\n\r\nWhy not just open source MonkeyCAM v3? Honestly, the code for my\r\npersonal version of MonkeyCAM has grown rather organically over almost\r\n10 years and three major revisions. It is a huge mess of C#, WinForms,\r\nand Managed DirectX, and I'd really prefer no one but me ever sees\r\nthat code again. :)\r\n\r\n## Dependencies\r\n\r\nMonkeyCAM currently depends on the following packages:\r\n\r\n* Currently, builds on Mac OSX 10.9.4 Mavericks with the system compiler, Apple LLVM version 5.1 (clang-503.0.40) (based on LLVM 3.4svn).\r\n* CMake 3.0.0. See http://www.cmake.org/ or install via something like Ports.\r\n* Boost 1.55.0. See http://www.boost.org/ or install via something like Ports.\r\n* Clipper 5.1.6. See\r\n  http://sourceforge.net/projects/polyclipping/. The CMake files\r\n  assume this is installed in a sibling directory with the top-level\r\n  MonkeyCAM directory, named clipper_ver5.1.6.\r\n* Up thru 953fe71b, GCC 4.8.1. See http://gcc.gnu.org/ or install via\r\n  something like Ports. I'll ressurect the GCC build once I start\r\n  deploying on AWS.\r\n\r\n## Contributing\r\n\r\nIf you're a software developer who is into ski and snowboard\r\nconstruction or CAM and you're interested in helping out on MonkeyCAM\r\nthen let's chat. Open up an issue with what you want to work on and\r\nwe'll work out the details there, or fork the repo, make some changes\r\nand put up a pull request!\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}